version: '3.7'
services:
  rtproxy:
    hostname: rtproxy
    image: zeta0/alpine-tor:latest
    ports:
      - 5566:5566
      - 2090:2090
      - 8118:8118
    environment:
      - tors=25
      - privoxy=1
  leiserbik:
    build:
      context: ./leiserbik
      dockerfile: Dockerfile
    ports:
      - 8000:8000
      - 9001:9001
    environment:
      - ROTATE_HTTP_PROXY=rtproxy:8118
      - ROTATE_HTTPS_PROXY=rtproxy:8118
    networks:
      - saundweiv

  # Confluent https://github.com/confluentinc/cp-docker-images/blob/5.2.1-post/examples/cp-all-in-one/docker-compose.yml
  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-enterprise-kafka:5.2.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  kafka-view:
    image: sourcelaborg/kafka-webview
    ports: 
      - 9080:8080
    volumes: 
      - ./kafkawebview_data:/app/data 
    #links:
    #  - broker
    depends_on:
      - broker     

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    container_name: elastic01
    hostname: elastic01
    environment:
      - node.name=elastic01
      - cluster.initial_master_nodes=elastic01
      - cluster.name=saundweiv-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - path.repo=/tmp/backup
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./data:/usr/share/elasticsearch/data
      - ./backup:/tmp/backup
    ports:
      - 9200:9200
    networks:
      - saundweiv

  kibana:
    image: docker.elastic.co/kibana/kibana:7.0.1
    ports:
      - 80:5601
    hostname: kibana.local  
    networks:
      - saundweiv

networks:
  saundweiv:

